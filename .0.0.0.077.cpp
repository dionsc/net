#include <bits/stdc++.h>using namespace std;#define ll long long#define fastio ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)ll mod=998244353;ll s[1000005]={0};ll inv_s[1000005]={0};ll pos[1000005]={0};ll neg[1000005]={0};inline ll qm(long long a, long long b){	long long sum = 1;	while (b > 0)    {		if (b&1) sum = (sum * a) % mod;		a = (a * a) % mod;        b>>=1;	}	return sum;}inline ll inv(ll x){	return qm(x,mod-2);}inline ll kinds(int a,int b){	return (s[a] * ((inv_s[b] * inv_s[a - b]) % mod))%mod;}int main(){	fastio;	s[0]=1;	for(ll i=1;i<=1000000;i++) s[i]=(i*s[i-1])%mod;	inv_s[1000000] = qm(s[1000000],mod-2);	for(ll i=999999;i>=0;i--) 	{		inv_s[i] = (inv_s[i + 1] * (i + 1)) % mod;	}	int t;	cin >> t;	while(t--)	{		ll n,m,a,b;		cin >> n >> m >> a >> b;		ll p1=(a*inv(b))%mod;		ll p2=((b-a)*inv(b))%mod;		pos[0]=neg[0]=1;		pos[1]=p1,neg[1]=p2;		for(int i=2;i<=n;i++)		{			pos[i]=(pos[i-1]*p1)%mod;			neg[i]=(neg[i-1]*p2)%mod;		}		ll res=0;		ll tem=0;		ll p;		for(int i=1;i<=n;i++)		{			tem=(tem+qm(i,m))%mod;			p=((pos[i]*neg[n-i])%mod)*kinds(n,i);			p%=mod;			res=(res+(p*tem))%mod;		}		cout<<res<<'\n';	}	return 0;}